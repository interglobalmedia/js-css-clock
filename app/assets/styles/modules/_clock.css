.clock, .clock-face {
    position: relative;
}

.clock:after, .hand, .diallines {
    position: absolute;
}

.clock:after, .hand {
    top: 50%;
}

.clock:after, .diallines {
    left: 50%;
}

.clock:after, .clock-face {
    border-radius: 50%;
}

.clock {
    width: 26.75rem;
    height: 26.75rem;
    border: 15px solid $mainAzure3;
    border-radius: 50%;
    margin: 40% auto 0;
    padding: 2rem;
    box-shadow: 0 0 0px 4px rgba(0, 0, 0, 0.1), inset 0 0 0 3px gray, inset 0 0 10px black, 0 0 10px rgba(0, 0, 0, 0.2);
    @media all and (min-width: 480px) {
        width: 36rem;
        height: 36rem;
        border: 20px solid $mainAzure3;
    }
}

.clock:after {
    background: red;
    content: '';
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    width: 6%;
    height: 6%;
    z-index: 1;
    @media all and (min-width: 480px) {
        width: 7%;
        height: 7%;
    }
}

.clock-face {
    height: 100%;
    width: 100%;
    /* account for the height of the clock hands */
    -webkit-transform: translateY(-3px);
    -moz-transform: translateY(-3px);
    transform: translateY(-3px);
}

.hand {
    width: 50%;
    height: 7px;
    background: black;
    /* origin is where the hand is going to do the rotation. so 100% means that it will rotate from the end located at the center of the circle instead of from the middle of the hand as is the default (50%). This is along the x axis. Puts pivot point at the very right hand side. */
    -webkit-transform-origin: 100%;
    -moz-transform-origin: 100%;
    transform-origin: 100%;
    /* because divs are blocks and start from left to right, the clock by default does not start at 12 o'clock. It is starting at 9. So here we are rotating the default by 90deg. That takes us to 12 o'clock. */
    -webkit-transform: rotate(90deg);
    -moz-transform: rotate(90deg);
    transform: rotate(90deg);
    -webkit-transition: all 0.05s;
    -moz-transition: all 0.05s;
    transition: all 0.05s;
    /* remove transition: all 0.5s again. I think it causes problems remotely. Let's see what happens.
    /* gives us a snappy little tick tick tick. Going back and forth. Gives realistic ticking feature. */
    -webkit-transition-timing-function: cubic-bezier(0.1, 2.7, 0.58, 1);
    -moz-transition-timing-function: cubic-bezier(0.1, 2.7, 0.58, 1);
    transition-timing-function: cubic-bezier(0.1, 2.7, 0.58, 1);
    @media screen and (min-width: 480px) {
        height: 10px;
    }
}

.hour-hand {
    width: 30%;
    left: 19%;
    @media all and (min-width: 480px) {
        left: 20%;
    }
}

.second-hand {
    background: red;
    height: 1px;
    margin-top: 5px;
    transform: translateY(-7px);
    @media all and (min-width: 480px) {
        height: 2px;
        margin-top: 6px;
    }
}

.diallines {
    width: 2px;
    height: 15px;
    background: #666;
    top: -5%;
    margin-left: -1px;
    transform-origin: 50% 141px;
    visibility: hidden;
}
